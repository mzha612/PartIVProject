h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dgamma(dia_art, coeff[1], coeff[2]))
}
# Write to file
write.csv(dia_art,file='diameters.csv',row.names=FALSE)
rm(list=ls(all=TRUE)) # Clear all
mydata = read.csv("Digitised_Data.csv")  # read from first sheet
# Create variables
dia_art <- mydata$Diameter_Freq[0:20]
p_dia_art <- mydata$Art_Dia_Freq[0:20]
plot(dia_art,p_dia_art)
# distribution type
dist <- 2
# Standardize the cumulative probabilities
cum_dia_art <- cumsum(p_dia_art);
cum_dia_art <- cum_dia_art / cum_dia_art[20]
if (dist == 1){
# Compute sum of squared residuals to a fit
f <- function(q) {
res <- pnorm(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
} else{
f <- function(q) {
res <- pgamma(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
}
# Find the least squares fit
coeff <-(fit <- nlm(f, c(3, 2)))$estimate
# Plot the fit
plot(dia_art, cum_dia_art)
if(dist == 1){
curve(pnorm(dia_art, coeff[1], coeff[2]), add=TRUE)
}else{
curve(pgamma(dia_art, coeff[1], coeff[2]), add=TRUE)
}
# Sample
n<-100000
curve(pgamma(dia_art, coeff[1], coeff[2]), add=TRUE)
if(dist == 1){
curve(pnorm(dia_art, coeff[1], coeff[2]), add=TRUE)
}else{
curve(pgamma(dia_art, coeff[1], coeff[2]), add=TRUE)
}
# Sample
n<-100000
if(dist == 1){
dia_art<-rnorm(n, coeff[1], coeff[2])
h <- hist(dia_art,plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dnorm(dia_art, coeff[1], coeff[2]))
}else{
dia_art<-rgamma(n, coeff[1], coeff[2])
h <- hist(dia_art,breaks = seq(-1.25,56.25,2.5),plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dgamma(dia_art, coeff[1], coeff[2]))
}
# Write to file
write.csv(dia_art,file='diameters.csv',row.names=FALSE)
curve(pgamma(dia_art, coeff[1], coeff[2]), add=TRUE)
# Create variables
dia_art <- mydata$Diameter_Freq[0:20]
curve(pgamma(dia_art, coeff[1], coeff[2]), add=TRUE)
curve(pgamma(cum_dia_art, coeff[1], coeff[2]), add=TRUE)
rm(list=ls(all=TRUE)) # Clear all
mydata = read.csv("Digitised_Data.csv")  # read from first sheet
# Create variables
dia_art <- mydata$Diameter_Freq[0:20]
p_dia_art <- mydata$Art_Dia_Freq[0:20]
plot(dia_art,p_dia_art)
# distribution type
dist <- 2
# Standardize the cumulative probabilities
cum_dia_art <- cumsum(p_dia_art);
cum_dia_art <- cum_dia_art / cum_dia_art[20]
if (dist == 1){
# Compute sum of squared residuals to a fit
f <- function(q) {
res <- pnorm(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
} else{
f <- function(q) {
res <- pgamma(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
}
# Find the least squares fit
coeff <-(fit <- nlm(f, c(3, 2)))$estimate
# Plot the fit
plot(dia_art, cum_dia_art)
if(dist == 1){
curve(pnorm(dia_art, coeff[1], coeff[2]), add=TRUE)
}else{
curve(pgamma(dia_art, coeff[1], coeff[2]), add=TRUE)
}
curve(pgamma(dia_art, coeff[1], coeff[2]), add=TRUE)
curve(pnorm(dia_art, coeff[1], coeff[2]), add=TRUE)
if(dist == 1){
curve(pnorm(dia_art, coeff[1], coeff[2]), add=TRUE)
}else{
curve(pgamma(dia_art, coeff[1], coeff[2]), add=TRUE)
}
line(pgamma(dia_art, coeff[1], coeff[2]), add=TRUE)
line(pgamma(dia_art, coeff[1], coeff[2]))
# Plot the fit
plot(dia_art, cum_dia_art)
if(dist == 1){
curve(pnorm(dia_art, coeff[1], coeff[2]), add=TRUE)
}else{
line(pgamma(dia_art, coeff[1], coeff[2]))
}
# Sample
n<-100000
if(dist == 1){
dia_art<-rnorm(n, coeff[1], coeff[2])
h <- hist(dia_art,plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dnorm(dia_art, coeff[1], coeff[2]))
}else{
dia_art<-rgamma(n, coeff[1], coeff[2])
h <- hist(dia_art,breaks = seq(-1.25,56.25,2.5),plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dgamma(dia_art, coeff[1], coeff[2]))
}
# Write to file
write.csv(dia_art,file='diameters.csv',row.names=FALSE)
rm(list=ls(all=TRUE)) # Clear all
mydata = read.csv("Digitised_Data.csv")  # read from first sheet
# Create variables
dia_art <- mydata$Diameter_Freq[0:20]
p_dia_art <- mydata$Art_Dia_Freq[0:20]
plot(dia_art,p_dia_art)
# distribution type
dist <- 2
# Standardize the cumulative probabilities
cum_dia_art <- cumsum(p_dia_art);
cum_dia_art <- cum_dia_art / cum_dia_art[20]
if (dist == 1){
# Compute sum of squared residuals to a fit
f <- function(q) {
res <- pnorm(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
} else{
f <- function(q) {
res <- pgamma(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
}
# Find the least squares fit
coeff <-(fit <- nlm(f, c(3, 2)))$estimate
# Plot the fit
plot(dia_art, cum_dia_art)
if(dist == 1){
curve(pnorm(dia_art, coeff[1], coeff[2]), add=TRUE)
}else{
line(pgamma(dia_art, coeff[1], coeff[2]))
}
# Sample
n<-100000
if(dist == 1){
dia_art<-rnorm(n, coeff[1], coeff[2])
h <- hist(dia_art,plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dnorm(dia_art, coeff[1], coeff[2]))
}else{
dia_art<-rgamma(n, coeff[1], coeff[2])
h <- hist(dia_art,breaks = seq(-1.25,56.25,2.5),plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dgamma(dia_art, coeff[1], coeff[2]))
}
# Write to file
write.csv(dia_art,file='diameters.csv',row.names=FALSE)
rm(list=ls(all=TRUE)) # Clear all
mydata = read.csv("Digitised_Data.csv")  # read from first sheet
# Create variables
dia_art <- mydata$Diameter_Freq[0:20]
p_dia_art <- mydata$Art_Dia_Freq[0:20]
plot(dia_art,p_dia_art)
# distribution type
dist <- 2
cum_dia_art <- cum_dia_art / cum_dia_art[20]
if (dist == 1){
# Compute sum of squared residuals to a fit
f <- function(q) {
res <- pnorm(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
} else{
f <- function(q) {
res <- pgamma(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
}
# Find the least squares fit
coeff <-(fit <- nlm(f, c(3, 2)))$estimate
# Sample
n<-100000
# Plot the fit
if(dist == 1){
plot(dia_art, cum_dia_art)
curve(pnorm(dia_art, coeff[1], coeff[2]), add=TRUE)
}else{
plot(dia_art, cum_dia_art)
line(pgamma(dia_art, coeff[1], coeff[2]))
}
# Standardize the cumulative probabilities
cum_dia_art <- cumsum(p_dia_art);
rm(list=ls(all=TRUE)) # Clear all
mydata = read.csv("Digitised_Data.csv")  # read from first sheet
# Create variables
dia_art <- mydata$Diameter_Freq[0:20]
p_dia_art <- mydata$Art_Dia_Freq[0:20]
plot(dia_art,p_dia_art)
# distribution type
dist <- 2
# Standardize the cumulative probabilities
cum_dia_art <- cumsum(p_dia_art);
cum_dia_art <- cum_dia_art / cum_dia_art[20]
if (dist == 1){
# Compute sum of squared residuals to a fit
f <- function(q) {
res <- pnorm(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
} else{
f <- function(q) {
res <- pgamma(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
}
# Find the least squares fit
coeff <-(fit <- nlm(f, c(3, 2)))$estimate
# Plot the fit
if(dist == 1){
plot(dia_art, cum_dia_art)
curve(pnorm(dia_art, coeff[1], coeff[2]), add=TRUE)
}else{
plot(dia_art, cum_dia_art)
line(pgamma(dia_art, coeff[1], coeff[2]))
}
line(pgamma(dia_art, coeff[1], coeff[2]))
curve(pgamma(dia_art, coeff[1], coeff[2]))
ccc <- curve(pgamma(dia_art, coeff[1], coeff[2]), add=TRUE)
ccc <- curve(pgamma(x, coeff[1], coeff[2]), add=TRUE)
# Plot the fit
if(dist == 1){
plot(dia_art, cum_dia_art)
curve(pnorm(dia_art, coeff[1], coeff[2]), add=TRUE)
}else{
plot(dia_art, cum_dia_art)
ccc <- curve(pgamma(x, coeff[1], coeff[2]), add=TRUE)
}
rm(list=ls(all=TRUE)) # Clear all
mydata = read.csv("Digitised_Data.csv")  # read from first sheet
# Create variables
dia_art <- mydata$Diameter_Freq[0:20]
p_dia_art <- mydata$Art_Dia_Freq[0:20]
plot(dia_art,p_dia_art)
# distribution type
dist <- 2
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Distribution.R', echo=TRUE)
rm(list=ls(all=TRUE)) # Clear all
# distribution type
dist <- 1
# sample size
n<-100000
mydata = read.csv("Digitised_Data.csv")  # read from first sheet
# Create variables
dia_art <- mydata$Diameter_Freq[0:20]
p_dia_art <- mydata$Art_Dia_Freq[0:20]
# Check
plot(dia_art,p_dia_art)
# Standardize the cumulative probabilities
cum_dia_art <- cumsum(p_dia_art);
cum_dia_art <- cum_dia_art / cum_dia_art[20]
# Compute sum of squared residuals to a fit
if (dist == 1){
f <- function(q) {
res <- pnorm(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
} else{
f <- function(q) {
res <- pgamma(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
}
# Find the least squares fit
coeff <-(fit <- nlm(f, c(3, 2)))$estimate
# Plot the fit
if(dist == 1){
plot(dia_art, cum_dia_art)
curve(pnorm(x, coeff[1], coeff[2]), add=TRUE)
}else{
plot(dia_art, cum_dia_art)
ccc <- curve(pgamma(x, coeff[1], coeff[2]), add=TRUE)
}
if(dist == 1){
dia_art<-rnorm(n, coeff[1], coeff[2])
h <- hist(dia_art,plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dnorm(dia_art, coeff[1], coeff[2]))
}else{
dia_art<-rgamma(n, coeff[1], coeff[2])
h <- hist(dia_art,breaks = seq(-1.25,56.25,2.5),plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dgamma(dia_art, coeff[1], coeff[2]))
}
# Write to file
write.csv(dia_art,file='diameters.csv',row.names=FALSE)
# Create variables
dia_art <- mydata$Diameter_Freq[0:20]
p_dia_art <- mydata$Art_Dia_Freq[0:20]
# Check
plot(log(dia_art),p_dia_art)
# Standardize the cumulative probabilities
cum_dia_art <- cumsum(p_dia_art);
cum_dia_art <- cum_dia_art / cum_dia_art[20]
# Compute sum of squared residuals to a fit
if (dist == 1){
f <- function(q) {
res <- pnorm(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
} else{
f <- function(q) {
res <- pgamma(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
}
# Find the least squares fit
coeff <-(fit <- nlm(f, c(3, 2)))$estimate
# Plot the fit
if(dist == 1){
plot(dia_art, cum_dia_art)
curve(pnorm(x, coeff[1], coeff[2]), add=TRUE)
}else{
plot(dia_art, cum_dia_art)
ccc <- curve(pgamma(x, coeff[1], coeff[2]), add=TRUE)
}
if(dist == 1){
dia_art<-rnorm(n, coeff[1], coeff[2])
h <- hist(dia_art,plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dnorm(dia_art, coeff[1], coeff[2]))
}else{
dia_art<-rgamma(n, coeff[1], coeff[2])
h <- hist(dia_art,breaks = seq(-1.25,56.25,2.5),plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dgamma(dia_art, coeff[1], coeff[2]))
}
# Write to file
write.csv(dia_art,file='diameters.csv',row.names=FALSE)
rm(list=ls(all=TRUE)) # Clear all
# distribution type
dist <- 2
# sample size
n<-100000
mydata = read.csv("Digitised_Data.csv")  # read from first sheet
# Create variables
dia_art <- mydata$Diameter_Freq[0:20]
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Distribution.R', echo=TRUE)
# distribution type
dist <- 1
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Distribution.R', echo=TRUE)
rm(list=ls(all=TRUE)) # Clear all
# distribution type
dist <- 3
# sample size
n<-100000
mydata = read.csv("Digitised_Data.csv")  # read from first sheet
# Create variables
dia_art <- mydata$Diameter_Freq[0:20]
p_dia_art <- mydata$Art_Dia_Freq[0:20]
# Check
plot(dia_art,p_dia_art)
# Standardize the cumulative probabilities
cum_dia_art <- cumsum(p_dia_art);
cum_dia_art <- cum_dia_art / cum_dia_art[20]
# Compute sum of squared residuals to a fit
if (dist == 1){
f <- function(q) {
res <- pnorm(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
}else if(dist == 2){
f <- function(q) {
res <- pnorm(log(dia_art), q[1], q[2]) - cum_dia_art
sum(res * res)
}
}else{
f <- function(q) {
res <- pgamma(dia_art, q[1], q[2]) - cum_dia_art
sum(res * res)
}
}
# Find the least squares fit
coeff <-(fit <- nlm(f, c(3, 2)))$estimate
# Plot the fit
if(dist == 1){
plot(dia_art, cum_dia_art)
curve(pnorm(x, coeff[1], coeff[2]), add=TRUE)
}else if(dist == 2){
plot(log(dia_art), cum_dia_art)
curve(pnorm(x, coeff[1], coeff[2]), add=TRUE)
}else{
plot(dia_art, cum_dia_art)
ccc <- curve(pgamma(x, coeff[1], coeff[2]), add=TRUE)
}
if(dist == 1){
dia_art<-rnorm(n, coeff[1], coeff[2])
h <- hist(dia_art,plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dnorm(dia_art, coeff[1], coeff[2]))
# Write to file
write.csv(dia_art,file='dia_art_norm.csv',row.names=FALSE)
}else if(dist == 2){
dia_art<-exp(rnorm(n, coeff[1], coeff[2]))
h <- hist(dia_art,plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dnorm(dia_art, coeff[1], coeff[2]))
# Write to file
write.csv(dia_art,file='dia_art_lognorm.csv',row.names=FALSE)
}else {
dia_art<-rgamma(n, coeff[1], coeff[2])
h <- hist(dia_art,breaks = seq(-1.25,56.25,2.5),plot=FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
line(dia_art,dgamma(dia_art, coeff[1], coeff[2]))
# Write to file
write.csv(dia_art,file='dia_art_gamma.csv',row.names=FALSE)
}
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
rm(list=ls(all=TRUE)) # Clear all
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
setwd("//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution")
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
rm(list=ls(all=TRUE)) # Clear all
setwd("//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution")
# distribution type
d_type <- 3
v_type <- 1  # Vessel type - arteriole, capillary, venule
c_type <- 1  # Characteristic type - diameter, length,
d_name <- c("norm","lognorm",'gamma')
v_name <- c("art","cap","ven")
c_name <- c("dia","len")
# sample size
n<-100000
mydata = read.csv("Digitised_Data.csv")  # read from first sheet
if(c_type == 1){ # Diameter
if(v_type == 1){ # Arteriole
x <- mydata$Diameter_Freq[0:20]
p_x <- mydata$Art_Dia_Freq[0:20]
num_values <- 20
}else if(v_type == 2){
}else if(v_type == 3){
}
}else if(c_type == 2){ # Length
if(v_type == 1){
}else if(v_type == 2){
}else if(v_type == 3){
}
}
filename <- paste(v_name(v_type),c_name(c_type),d_name(d_type),sep = "_")
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
print(x)
h <- hist(x,breaks = seq(-1.25,81.25,2.5),plot=FALSE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
print(x)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/home/mzha612/Desktop/PartIV/PartIVProject/Sample Distribution/Distribution.R', echo=TRUE)
